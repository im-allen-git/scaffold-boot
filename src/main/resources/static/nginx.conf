
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log   /logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    # 启动内容压缩，有效降低网络流量
    gzip on;
    # 过短的内容压缩效果不佳，压缩过程还会浪费系统资源
    gzip_min_length 1000;
    # 可选值1~9,压缩级别越高压缩率越高，但对系统性能要求越高
gzip_buffers 4 16k;
gzip_comp_level 4;
    # 压缩的内容类别
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # 静态文件缓存
    # 最大缓存数量，文件未使用存活期
    open_file_cache max=655350 inactive=20s;
    # 验证缓存有效期时间间隔
    open_file_cache_valid 30s;
    # 有效期内文件最少使用次数
    open_file_cache_min_uses 2;


    # HTTPS server
    #
    server {
        listen       81;
        index apa/index.html


       client_max_body_size 20m;
   # 定义错误页面码，如果出现相应的错误页面码，转发到那里。
    error_page  404 403 500 502 503 504  /404.html;
    # 承接上面的location。
    location = /404.html {
     #放错误页面的目录路径。
        root   E:/tomcatlist/apache-tomcat-8-import/webapps/importexpress/apa;
        internal;
		}


        #配置Nginx动静分离，定义的静态页面直接从Nginx发布目录读取。
        #location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css)$
        location ~ .*\.(html|htm|json|gif|jpg|jpeg|JPG|PNG|JPEG|bmp|png|ico|txt|js|css|xml|zip|rar|xls|mp4|fls|svg|ttf)$
        {
            root E:/tomcatlist/apache-tomcat-8-import/webapps/importexpress;
            #expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
            expires 7d;
        }
	#rewrite ^\productinfo/(.*)$  http://192.168.1.67:8087/goodsinfo/$request_filename$1 permanent;

		location ^~ /productinfo/*\.html
        {
            root E:/tomcatlist/apache-tomcat-8-import/webapps/importexpress/productinfo/;
            #expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
            expires 7d;

			 if (-f $request_filename) {
					break;
				}

			proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
            proxy_pass http://192.168.1.67:8087/goodsinfo/;
            proxy_http_version 1.1;
            proxy_set_header X_FORWARDED_PROTO https;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_headers_hash_max_size 51200;
            proxy_headers_hash_bucket_size 6400;

			}

			 location ^~ /product/*\.json
        {
            root E:/tomcatlist/apache-tomcat-8-import/webapps/importexpress;
            #expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
            expires 7d;

			 if (-f $request_filename) {
					break;
				}

			proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
            proxy_pass http://192.168.1.67:8087/product/;
            proxy_http_version 1.1;
            proxy_set_header X_FORWARDED_PROTO https;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_headers_hash_max_size 51200;
            proxy_headers_hash_bucket_size 6400;

			}



        location /.well-known/ {
            alias /data/.well-known/;
        }
		location ^~ /product/ {
             #屏蔽网络爬虫，节省流量
            if ($http_user_agent ~* "python|curl|java|wget|httpclient|okhttp|Baiduspider|Sogou spider|Sogou web spider") {
                return 403;
            }

            #缓存设置
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;

            proxy_pass http://192.168.1.67:8087;

            proxy_http_version 1.1;
            proxy_set_header X_FORWARDED_PROTO https;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_headers_hash_max_size 51200;
            proxy_headers_hash_bucket_size 6400;
        }




# location /
location ^~ /searchproduct {
             #屏蔽网络爬虫，节省流量
            if ($http_user_agent ~* "python|curl|java|wget|httpclient|okhttp|Baiduspider|Sogou spider|Sogou web spider") {
                return 403;
          }

            #缓存设置
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;

            proxy_pass http://192.168.1.67:8087;

            proxy_http_version 1.1;
            proxy_set_header X_FORWARDED_PROTO https;
           proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $host;
           proxy_headers_hash_max_size 51200;
           proxy_headers_hash_bucket_size 6400;
        }



	location ^~ /complain {
             #屏蔽网络爬虫，节省流量
            if ($http_user_agent ~* "python|curl|java|wget|httpclient|okhttp|Baiduspider|Sogou spider|Sogou web spider") {
                return 403;
          }

            #缓存设置
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;

            proxy_pass http://192.168.1.67:8087;

            proxy_http_version 1.1;
            proxy_set_header X_FORWARDED_PROTO https;
           proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $host;
           proxy_headers_hash_max_size 51200;
           proxy_headers_hash_bucket_size 6400;
        }


		 location / {

            #屏蔽网络爬虫，节省流量
            if ($http_user_agent ~* "python|curl|java|wget|httpclient|okhttp|Baiduspider|Sogou spider|Sogou web spider") {
                return 403;
            }
            #缓存设置
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;

            proxy_pass http://192.168.1.67:8087;
            
            proxy_http_version 1.1;        
            proxy_set_header X_FORWARDED_PROTO https;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_headers_hash_max_size 51200;
            proxy_headers_hash_bucket_size 6400;
            
        }
		}
	}